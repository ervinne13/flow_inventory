package com.flow.inventory.model;
// Generated Mar 10, 2016 2:37:53 PM by Hibernate Tools 4.3.1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * PartnerAccountingDetail generated by hbm2java
 */
@Entity
@Table(name = "partner_accounting")
public class PartnerAccountingDetail implements java.io.Serializable {

    private int id;
    private ChartOfAccountsEntry accountPayable;
    private ChartOfAccountsEntry accountReceivable;
    private Partner partner;
    private PaymentTerm paymentTermsByCustomerPaymentTermId;
    private PaymentTerm paymentTermsByVendorPaymentTermId;
    private boolean isVendor;
    private boolean isCustomer;

    public PartnerAccountingDetail() {
    }

    public PartnerAccountingDetail(int id, Partner partner, boolean isVendor, boolean isCustomer) {
        this.id = id;
        this.partner = partner;
        this.isVendor = isVendor;
        this.isCustomer = isCustomer;
    }

    public PartnerAccountingDetail(int id, ChartOfAccountsEntry chartOfAccountsByAccountPayable, ChartOfAccountsEntry chartOfAccountsByAccountReceivable, Partner partners, PaymentTerm paymentTermsByCustomerPaymentTermId, PaymentTerm paymentTermsByVendorPaymentTermId, boolean isVendor, boolean isCustomer) {
        this.id = id;
        this.accountPayable = chartOfAccountsByAccountPayable;
        this.accountReceivable = chartOfAccountsByAccountReceivable;
        this.partner = partners;
        this.paymentTermsByCustomerPaymentTermId = paymentTermsByCustomerPaymentTermId;
        this.paymentTermsByVendorPaymentTermId = paymentTermsByVendorPaymentTermId;
        this.isVendor = isVendor;
        this.isCustomer = isCustomer;
    }

    @Id
    @GeneratedValue
    @Column(name = "id")
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @ManyToOne(targetEntity = ChartOfAccountsEntry.class, fetch = FetchType.EAGER)
    public ChartOfAccountsEntry getAccountPayable() {
        return this.accountPayable;
    }

    public void setAccountPayable(ChartOfAccountsEntry accountPayable) {
        this.accountPayable = accountPayable;
    }

    @ManyToOne(targetEntity = ChartOfAccountsEntry.class, fetch = FetchType.EAGER)
    public ChartOfAccountsEntry getAccountReceivable() {
        return this.accountReceivable;
    }

    public void setAccountReceivable(ChartOfAccountsEntry accountReceivable) {
        this.accountReceivable = accountReceivable;
    }

    @OneToOne(targetEntity = Partner.class)
    public Partner getPartner() {
        return this.partner;
    }

    public void setPartner(Partner partner) {
        this.partner = partner;
    }

    @ManyToOne(targetEntity = PaymentTerm.class, fetch = FetchType.EAGER)
    public PaymentTerm getPaymentTermsByCustomerPaymentTermId() {
        return this.paymentTermsByCustomerPaymentTermId;
    }

    public void setPaymentTermsByCustomerPaymentTermId(PaymentTerm paymentTermsByCustomerPaymentTermId) {
        this.paymentTermsByCustomerPaymentTermId = paymentTermsByCustomerPaymentTermId;
    }

    @ManyToOne(targetEntity = PaymentTerm.class, fetch = FetchType.EAGER)
    public PaymentTerm getPaymentTermsByVendorPaymentTermId() {
        return this.paymentTermsByVendorPaymentTermId;
    }

    public void setPaymentTermsByVendorPaymentTermId(PaymentTerm paymentTermsByVendorPaymentTermId) {
        this.paymentTermsByVendorPaymentTermId = paymentTermsByVendorPaymentTermId;
    }

    @Column(name = "is_vendor")
    public boolean isVendor() {
        return this.isVendor;
    }

    public void setVendor(boolean isVendor) {
        this.isVendor = isVendor;
    }

    @Column(name = "is_customer")
    public boolean isCustomer() {
        return this.isCustomer;
    }

    public void setCustomer(boolean isCustomer) {
        this.isCustomer = isCustomer;
    }

}
